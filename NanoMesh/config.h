#ifndef CONFIG_H
#define CONFIG_H

#include <nRF24L01.h>
#include <RF24.h>
#include "msgQueue.h"
void(* resetFunc) (void) = 0; //declare reset function @ address 0

#include <SPI.h>
// This library allows you to communicate with SPI devices, with the Arduino as the master device.
// - MISO (Master In Slave Out) - The Slave line for sending data to the master,
// - MOSI (Master Out Slave In) - The Master line for sending data to the peripherals,
// - SCK (Serial Clock) - The clock pulses which synchronize data transmission generated by the master

#include <EEPROM.h>
// The microcontroller on the Arduino and Genuino AVR based board has 
// EEPROM: memory whose values are kept when the board is turned off (like a tiny hard drive).
// This library enables you to read and write those bytes

#define MASSEGE_SIZE 22

RF24 radio (7,8);
int NodeId = 7;

typedef struct payload{
  uint32_t Msg_Id;
  uint8_t src;
  uint8_t dest;
  char data[MASSEGE_SIZE];
}payload_t;


byte addresses[][6] = {"00001"};


uint64_t testTimer = 0;

MsgQueue msgIdQueue;
//#define TEST_MODE

#endif
